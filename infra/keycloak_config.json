{
  "id": "847c0e29-e72a-422c-941b-f6e364566f10",
  "realm": "transversal",
  "displayName": "Transversal",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 480,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "f3f5a268-7cea-4387-9434-f603f75768fb",
        "name": "default-roles-transversal",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization", "transversal-user"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "847c0e29-e72a-422c-941b-f6e364566f10",
        "attributes": {}
      },
      {
        "id": "5ff8791f-10c0-4d44-acb6-84e0b5161a0c",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "847c0e29-e72a-422c-941b-f6e364566f10",
        "attributes": {}
      },
      {
        "id": "9590291e-c73a-4173-b2de-3547098a73e3",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "847c0e29-e72a-422c-941b-f6e364566f10",
        "attributes": {}
      },
      {
        "id": "4922b1f2-8b92-4ade-a75c-a05055ce79d1",
        "name": "transversal-user",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "847c0e29-e72a-422c-941b-f6e364566f10",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "5c3d855f-9bfd-4f98-965e-728ceb1fc44a",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "92314f79-5b79-4119-a3aa-ea64e7f94e30",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "09908a04-a83b-4ad6-8c35-642ff982996b",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "054d2348-90a6-47c5-8f32-b097f60435b1",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "447f0a12-d1e7-4149-913e-4f129ee0c259",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "4346f104-1103-4b37-abc2-58b62e45fdb1",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "3a1d62fa-7ec1-47d7-984f-64f44f81db47",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "1694c508-20ad-4983-bfb3-45fb55f814ad",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "db253beb-ba3c-464f-b82c-3dc0d309cdc8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "d973c6bd-3495-4666-961e-d53821102c32",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "80112ffa-b8c2-45a6-b3d5-4c6c3c25cb3b",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "9b0ed0a1-b124-47fd-a65f-816f81155791",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "e3594031-3c66-4c44-aa71-e186509b0c88",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "6ae236aa-40dc-47c0-b03c-f11bb34c2903",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "f901e6d6-8da2-4cb5-b27a-6cfc9b325a4e",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "58de306a-7f56-4c79-ad49-050ed4c4f46f",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "efe19fef-4fb6-4eec-a0f9-de48e6bfa5de",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "02132e36-cbeb-4d31-a454-c805197cc52b",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        },
        {
          "id": "40046467-b793-4af9-b8eb-addd1c465024",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-realm",
                "query-groups",
                "view-events",
                "impersonation",
                "view-identity-providers",
                "view-clients",
                "manage-events",
                "view-realm",
                "create-client",
                "manage-clients",
                "query-users",
                "query-clients",
                "view-authorization",
                "manage-authorization",
                "manage-users",
                "manage-identity-providers",
                "query-realms",
                "view-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "8b708cd9-23e7-47ac-9084-c2db86790748",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "f8acadbe-0331-4f1d-9b5a-bda43268bb85",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "376b13ea-ac8d-4756-a334-95431e666939",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        },
        {
          "id": "05d54b8a-8f72-47dd-9d63-e2f168c7b293",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        },
        {
          "id": "1f704ad9-8411-4f7b-a704-ea28cd7b3363",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        },
        {
          "id": "f4bf88c6-d78b-4929-9ff5-18b98d456742",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        },
        {
          "id": "c9f5c4a2-1889-475e-85c2-27c28e41e996",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        },
        {
          "id": "bad90f0b-f006-419a-9060-e1d4e766f94d",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        },
        {
          "id": "e274d0ad-4693-49d4-b60d-425b1ecfee0b",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        },
        {
          "id": "5feffae4-f170-4552-869c-a21386129a82",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "b0da13f3-aaff-42b9-84fc-02225fad757f",
          "attributes": {}
        }
      ],
      "transversal": [
        {
          "id": "5cdcb213-ebaf-4823-aac9-75bd248dc496",
          "name": "user",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "c207a1a2-1eb7-46b4-924c-67ac0aaf2671",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "f3f5a268-7cea-4387-9434-f603f75768fb",
    "name": "default-roles-transversal",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "847c0e29-e72a-422c-941b-f6e364566f10"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "7ba15be8-19d9-447c-9d09-2128c5375a21",
      "username": "samosaara",
      "firstName": "Samuel",
      "lastName": "Oliveira da Silva",
      "email": "dasd@dsadad.com",
      "emailVerified": true,
      "createdTimestamp": 1717953458430,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "3bf5edfc-dacf-4b4c-9a6a-001d33ccdf59",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1717959375910,
          "secretData": "{\"value\":\"2yxiyfotfQyIlyOA6egGfMbPldNVsgsdZk4by9HD9PAyh1VyxnbArH9iTFcZvypVLs4rOfaPeYjBz+KmOnj1GA==\",\"salt\":\"uFCCOAgD++o2p8SUjD7epg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-transversal", "transversal-user"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "b0da13f3-aaff-42b9-84fc-02225fad757f",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/transversal/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/transversal/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8bbee5d2-7bdd-4235-b93d-0780513eb8da",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/transversal/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/transversal/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "306cc88b-6610-4357-a29f-fa1b3c442c1a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1124c086-1dc7-432b-bd41-6ae72f5a6240",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f8acadbe-0331-4f1d-9b5a-bda43268bb85",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c207a1a2-1eb7-46b4-924c-67ac0aaf2671",
      "clientId": "transversal",
      "name": "Transversal",
      "description": "",
      "rootUrl": "http://localhost:8889",
      "adminUrl": "http://localhost:8889",
      "baseUrl": "http://localhost:8889",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "hugO4QQGqDnDgAHptpzD9G8m9Oi3L6Ll",
      "redirectUris": ["/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1717764668",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "4203eb5c-c2fd-47d8-9ee3-c35519bdcc06",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "eaa19c8c-112f-479a-97f5-beb828a3fc91",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f9a41728-0834-47ce-b4f3-731335c78180",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/transversal/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/transversal/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "5092c3bb-a77e-41ce-9dfe-d2f0874203c2",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "37cd72ae-7aa9-4d00-905a-67068bffb0cd",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4d8cb711-be4a-4c6a-aa9b-0b89e05ac205",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "690a4325-f632-496a-afcf-9317c51b91db",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "5dc136ff-bb55-40da-8a27-774f3f09dc02",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5c6655b4-7fc3-4ad5-9970-d6290e6180c7",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "85f36af9-7ea1-4c76-8d21-68fe3df34ee1",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "68f1db7c-da57-4ad4-9dbc-c2dee33b2e41",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1c4fc839-437c-45d4-83eb-b7c7689b0f5d",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2ed3d2cd-7f18-41d3-9482-87e8e83a2c62",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7776374a-11c6-4544-a943-2c7ae8174b21",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b296b193-2956-41bb-94a3-6e96ba4600a2",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "89124ec2-8b6b-4375-989b-eb4bf611d4ee",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c4fcf27e-3d0b-48ed-9bc8-7b94eafaf2ab",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7f0cde86-498a-4fee-a691-ea820af03764",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "707366f2-545e-486b-b66f-0b16b4280814",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "651a022b-6102-4eb6-be1b-1ca6c3f123ae",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2447d838-b582-4942-b049-394baeb84619",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "496de908-225b-4232-ae04-315103e8994f",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d6fa3fb7-e94f-4e7e-b325-0320ba3c3b85",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d6aa54dc-1949-4c91-bab3-546725340d57",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "357b2a65-f409-477d-83eb-f3bfe51f7373",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5f276383-6ae6-47bc-baa2-a401f28b5161",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "b3f9ff73-cc62-40e9-a16f-ce599381437d",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "66426471-cca2-4ef9-b92b-030478d70267",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "7b9328af-3fc7-4964-a3d0-6a680d0a59d7",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "bab19d2c-ef8f-457a-99ea-b4b4e574d0f8",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e31367f7-ecd8-4813-ac19-d440644bf7a1",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "89a4b750-af81-440d-bb4d-ac83a5069d03",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "1ffa9e24-218a-469e-8384-af8b48d765eb",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "175df46d-d4e3-4a98-a377-c8bb7ca9d8d8",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "c8ac4977-4bbc-4819-b321-b0a61d505113",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "6324b7b0-955d-4a50-9cdd-6b50ebe52594",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "faef0b3b-2a0d-4ddd-8582-d4a94af741df",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "bc344626-81f9-44c7-a75b-ac2814402cd6",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b352a674-8ab6-4bf7-b29d-c2b5c604f177",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "425cb9ef-5e49-4f7c-b3f4-75dea817fb72",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c6d6becd-b90b-4462-ac38-5272ec031bda",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a336ad3c-ec22-4422-be8e-96d38606fdf9",
      "name": "audience",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "14f5345a-f417-49b0-8cfa-ef12fd986fd7",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "audience"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c5ea133f-b699-45eb-b7b5-ce91e90c1183",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "76a2c249-fa52-431e-a3de-154c7828ddb7",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "73035941-854e-4699-bf80-617ebd71e6b1",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "c18a9ca8-8203-492c-96ba-64a2699baf2b",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "467bd0de-d843-41b1-bc68-9ec6d1d5123f",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "9fb93223-2ce3-41ed-9124-a4cbe0848ecc",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "1266b869-8fac-4b43-90b0-731932ad0ede",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "e408998c-79f2-489a-947a-146f08c0f14c",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "ee6f3b67-36aa-4495-a647-73cfac7e2816",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["42beb494-7071-499f-84cd-55ee77f4abaf"],
          "secret": ["gRiFyPdCpzbQPenVL5CbFA"],
          "priority": ["100"]
        }
      },
      {
        "id": "1cbab8c5-79ef-4eb2-8d94-3c4712fddb0e",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpQIBAAKCAQEAtOFjxIqabgPw2siXnJx9/tJbM2rCjH5+t1KY4LcxLSVW9h1YTBv+7TSJmxO6yt2/PnuG6bZpH99udYfEejqRB7nX4YeBp4HQrNidyTHOxVlbkNxaBwXstX8vzGoDW1/oWP1KZf5Y1s08EU45rEzc2QvF+LiuLh2uHgiRvLrJwk7ebbKXrAhRy8rubwlLqLeBLJ001iaDrZX77QfGnlTTg6RVeRIeqJ3kBWFtY96LATaZUtQtSDiVWH+y6IrrsqmsRz7SeV4Xyt50+bP9tU/bhc5326Bg/4qEIMWV5iI93+dS1Mx3nFVJhvPTQuU+5OtLd4t3DrbLDSR58klMqPh4XwIDAQABAoIBAFZhAGT+j8sUBLRmcMiwjxbe3ADM7gVr7xWa0zkVIt3dZA76ao1GHVKn8ULmhCCXDtpG4WHA46j96WElKfX4/AOFg4vHS2pz+vRgKdHIAGeMScb/A9swwB7Ykzn6MoozXeEJbLsSYNiLgDD/e1lGB317OtqRT1TkhZ8AFqDbTriEZS8oWBw+Oyd0gNlRlWldoLo41qoENwAKLC7lZhYihzHFPweHAMsRWA917PMR7Va7E0P2kujbQQ79Itn+8DpDmPdSlxSi+dP5o+bRG18kaeysbG3173AKctEhH4+UTYNmCD1SayISXMzreprBH5VRzm5FSM62hJ8eqThwygCZAykCgYEA6wFnrJu1mXXpmkWugdBheAPneiglrlYWj/2CxyKndkVSa1ECqxXI5fpIa6NUq+WReAOAbp++Zc4ZN8iRkShCHtM1mjYx9wWp244XrB9bSsEJk/+W5OrqcQ1dksY58DtlEvpuDdvvH9+BFVJ5KLQd1k6cPYZn2vBC8ld/ul0yrmMCgYEAxQoj39QHHKMyjxCj5pr0jrwWSIZoBSZo8z5d9vBrxtdEvzs1cYte+YFV2BWyyowJ8/543YIncMnAH6JHQVqL6NAeViH+vC1DhSOe+9YBDiu9j2rX6ZcusE81Y/21kFm5vDsH9Uj2l7nZqa0W07G6T59lKsrr0EngC+Cw5dtLINUCgYEA3g+CzoiH7c2MgnlLr2CfaU+PIE/lYzn3sfHj7JVjVg+lFMEE23MHVcDNQ+CfNpsDfTsZ1e5edEZub9a3LkmzSPtdEC4bwoZ4fX1kAwHSOu3zRgTiqccM5uyxOerTfpwxIuC+s5vZ9e01RVecIwknlITNgBmL80bKi8KAcDJ2nG8CgYEAvnYXyUMVgMwLkhjepYlBPjt3OrGZGOlQ51dw0sMBGxp4nHTqKxAyRPGM/iuzQHBvKoffYxZtc2vBJ5LgV77joK6TtGR17IXAT5DoG7x4Fq+XM2tuu5/khI58KGRUvezNSbKx9ZqKqoz+ZjIm74hLdK25x8yQdy0Bwdl2hSkdjOUCgYEAw4VdUpUnjNElQ2OvruPRkrLj9Zxjjmcp++hNu6XixU6zyXlIk2s/sLgCKmReVR007LJknsJwS/ZZJExF6ViI6jFAfmQYwjIvbsAQ6HeWPas79rik1vYqSxEMcPBgVbn+02wJ2PSkIFubRbDvdHFDAU+ao0LtCwbmUmqkQ57FCRw="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICpTCCAY0CBgGP8sAGbDANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtIeXBlciBUYXJvdDAeFw0yNDA2MDcxMjQ4NDFaFw0zNDA2MDcxMjUwMjFaMBYxFDASBgNVBAMMC0h5cGVyIFRhcm90MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtOFjxIqabgPw2siXnJx9/tJbM2rCjH5+t1KY4LcxLSVW9h1YTBv+7TSJmxO6yt2/PnuG6bZpH99udYfEejqRB7nX4YeBp4HQrNidyTHOxVlbkNxaBwXstX8vzGoDW1/oWP1KZf5Y1s08EU45rEzc2QvF+LiuLh2uHgiRvLrJwk7ebbKXrAhRy8rubwlLqLeBLJ001iaDrZX77QfGnlTTg6RVeRIeqJ3kBWFtY96LATaZUtQtSDiVWH+y6IrrsqmsRz7SeV4Xyt50+bP9tU/bhc5326Bg/4qEIMWV5iI93+dS1Mx3nFVJhvPTQuU+5OtLd4t3DrbLDSR58klMqPh4XwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCC+uNv/lQOAEVTnPX8skZH63x99JrkClNrUjpPPyENm/3gfQV1f2d00LVx3CKZHaguTUaq64DerdI4nXd/ipUZF7ZmHtiT7O4eyAViO3sBFw8zo5LUQwvrzoyCGwemgnKskg2XyPjMkFoNOjwj+yE1NQcfmA+ZKwtoInkqHxwXpwNar5oGkNJHLEBQD5AWTcfk9zQMaVcdUvPs9HS4D2SaPpcTxnV68Fh+Z1ASTL1zC2ULUGCbazG7zSU5mzANeaqkZ5VsRIJHo+P27CYa6wmrQSpawplmoqCltlXiNb47lt02lpBjuCb41PmkvSxDbFHqZc6xln0nOHkw4b0HkevD"
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "d7414535-0eda-430e-a341-70287b3db929",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA1obUA4gB5S8zPSBZRaGxX9FSs04hyN/Xa6T2JEF2dW8vzkH59ohV7e5sbDOIkigvq04f6q9YdsQn2sR6SDG7VCZHiVpjjpwAKuawUbDm238zyQvQFn5aybz1iKOs0SeX6RXKkYH5ONrUmDgQxvpxEqgtPScUCHdQEEVYOJzo93TmDSGsWQnSvBeR9NK8nOllqqDboIGAkavSdQTi5alJbRagx9ypRkuboIRD2QgmLI6pUdQjjR4lOfq1LHsM1leDq2BUxvzUbtUum/XGSzbj0PHzV9u439uAjoX4eS8BL1CT35Q8QhBEd+an+UK4AxbPieli10oPfS49RmdCqe6YvwIDAQABAoIBADCEkdKyoesZf7clZ8tNxHXtO4z98Lojle7sgha1D3uDyAYX+dZ+AyEquS7HgO29VPqjUqibO6CwwGrD4PwO81UWyzsPTFDmi0sonVv8bFncLPQdTdSogxP5PnbGvcEX+U1n9kZuZNUs+MPsei7mWUhk7MZV3jwD8AGeDVPQeQft5/X6zgWyXOXKlhys8BCpSJewqdagccpa7wHoZgn4aKE2+EZ0DYjOMNuO+GJCE7xUW+EobVLjizXG06u1Hh2qC7/bWdXzrK30OP6uhGC55fmZ388YLyyle+dxUtCTvSgaYmXpws2uIh4/jxDDSM89DOqMfUJPWd38vZSmrxFhMFECgYEA/ldYpY743KiYxOVdd4a5525VvFSFsgie5FC4PWNmXYbgtI1y5NlK1ff0tlkTZ5nOv1Zf5LVwgWTRIfRAhZCHWQuMJYjkyJ1Bhr3QtwbD/SoZ8/dS8rWAXFDFa4aN6HkUkzg0Hy3s66ALaFJ6CBuyWHf00B7C9q15Eu3Hp1tgCk0CgYEA1+0BtkKma2q51kvSUQupPIR3lmoIByNO4mHvT8QgrcMw0bV8LdZC0xmfr3gbVE+qQHPMJlQfY6Dl2GaJmdftpFs90raW1/DtLOmn9dJzi5Hg6398MhlHwNgjppSgpu3bYF41ySXyOuM6DBKoDRevsphWv5QkpUaPfHdLFY3nnTsCgYB/JzPOMRgBWNhnNzPvGY+/P83lBWyBgQXOpvw01IjMoS2dlkmmV2uuZPQWZZnp5V8TER+Hu52vUrOrAe1v2L2RqtA5w6J9GQE1V5gMqHk7C91FtpPlew/dFxRbmT1Ax6edoi+Mlu0nLzAEy5bujsouqGnf0kEuCbPJ3s49wNTW0QKBgQCyy1r+i6P4EFC/hNsrJufE57+KelQZbQA17nhV6YZRu+3hyFCCOAfveylCB8dBghHs+rXSCxhOy/1mukk4bZcm4DKKF41CVApghT4CDHiG2o2PE2pIpaxHn/GtTybT8uMTog8Rd21jm6IGOzCSXsmqrgAu9MF/ZbUMkE9JEs713wKBgAHICyrDlJ882Vf/NzQe0DFXSocVyXeyMetNBOnbteGRJ3bZOKtZtUbtRDV500nBzLZsMtvgUiBguJEr2rANIJtcgOiTtt8R7TmRf5PEgrJnMGbc2XmHB42t36SjbNSOJnhWo0YCBfW/ZZECe2uFobsVezkoVs9l9PKQBpwaiuym"
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICpTCCAY0CBgGP8sAGHzANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtIeXBlciBUYXJvdDAeFw0yNDA2MDcxMjQ4NDFaFw0zNDA2MDcxMjUwMjFaMBYxFDASBgNVBAMMC0h5cGVyIFRhcm90MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1obUA4gB5S8zPSBZRaGxX9FSs04hyN/Xa6T2JEF2dW8vzkH59ohV7e5sbDOIkigvq04f6q9YdsQn2sR6SDG7VCZHiVpjjpwAKuawUbDm238zyQvQFn5aybz1iKOs0SeX6RXKkYH5ONrUmDgQxvpxEqgtPScUCHdQEEVYOJzo93TmDSGsWQnSvBeR9NK8nOllqqDboIGAkavSdQTi5alJbRagx9ypRkuboIRD2QgmLI6pUdQjjR4lOfq1LHsM1leDq2BUxvzUbtUum/XGSzbj0PHzV9u439uAjoX4eS8BL1CT35Q8QhBEd+an+UK4AxbPieli10oPfS49RmdCqe6YvwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA1LA03isJJmoJRPFf/j9HJ4aGFMEc6FMPy9ZVxdAB32tqGtzWWpZ/UQC0/Wv6Xmb7MCbf0S1JfnSa9HKfqJLAn8S/YP4gX0TQrBpM61G8cgdSDkMIRBM+e+9hv0qJh0gq3IoPZggN0GaAhpXmrsApSQBlOE0fXYZfQEuH9riRFMLf8niO/j58oUzEIUlWElKklm3GIUwvxw1h3vfPJuLDKtXtHykQzBof0q1ZmrPhHXGS1qjCaOO9J4kdDLDz1pzzfKRjkI0iBHTYzXBhbJwFmZR0/dBbIXSmQO1wdQy3fGL3mO2EFHheeFOtWuAOM5daZ71UF2N6vejkzFWGDOk+U"
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "3526b743-69eb-4387-9646-cf5571eea250",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["49ca800a-8dfe-424a-84d6-021ee28c2ec7"],
          "secret": [
            "c_0-HUER5IZth56PjMfsWa-fcAPGwqt_Mn5g98zo9xqwKkSdOnCGrfoQWONFGFlVhjVJNYusepTv-iwUT8z1-AJ2Bca47LkebrVVfkRBo9UbVfxjexWnHdHQMno-9eWhMFVE9-CAB-8azUkuNcriiaBwyWmPoPIeXuuCj5Oc2q8"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "2348f341-9fad-424b-a50e-55492a7e47f1",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a9edc02a-0d89-4343-b834-33fd234e2764",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2c7d174b-3fce-439c-a62f-494baf692251",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0b46f1a7-8054-44c2-94a1-acb440cfca01",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ce4031d8-883a-4529-9c3b-532c24c96b53",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5dc74299-3190-48ff-8849-4ceade2046f8",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f8953e51-62d7-46e4-a2c0-420ea909542c",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "631e89f4-d6ff-4f18-9aa0-b3e30f23d415",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d8767243-c386-4169-8fde-801a05f0de47",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f72e1912-55ec-49f4-a54c-bb278a735565",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "395dada9-46ca-4089-9014-6bd259a3e97f",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bcd041a4-d356-4d71-8e42-e7929870243a",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7167dc54-dc50-4a32-bd69-c9631d8bfb56",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9b10c0e7-9ccd-4f05-b943-df28e731bd95",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8de93474-b6c8-4fc9-88d5-b279777fc8ec",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a01d7dbe-f306-4f81-bab8-48efdd03f981",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f7715aba-b3e6-4c49-a47a-3df11d7a5cc8",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6c15d128-6314-445c-86a4-105b935abf89",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "41914002-97b7-4c40-bb9d-15c817ea048a",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "d1391c7d-def7-42a6-81d5-2c26cddefa41",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.verify-email": "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.execute-actions": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}",
    "shortVerificationUri": "",
    "actionTokenGeneratedByUserLifespan.reset-credentials": ""
  },
  "keycloakVersion": "24.0.4",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": [
      {
        "name": "yddfs",
        "description": "",
        "enabled": true,
        "conditions": [],
        "profiles": []
      }
    ]
  }
}
